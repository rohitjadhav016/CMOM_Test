{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\cmom_test\\\\src\\\\component\\\\GetGeckoApi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport './css/GetGeckoApi.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetGeckoApi = () => {\n  _s();\n\n  const [marketTableData, setmarketTableData] = useState([]);\n  const [search, setSearchData] = useState(null);\n  let marketDataCols = [];\n  let url = \"\"; //let errorMessage = \"\";\n\n  if (!search) {\n    marketDataCols = [{\n      field: \"image\",\n      headerName: \"Image\"\n    }, {\n      field: \"name\",\n      headerName: \"Name\"\n    }, {\n      field: \"symbol\",\n      headerName: \"Symbol\"\n    }, {\n      field: \"current_price\",\n      headerName: \"Current Price\"\n    }, {\n      field: \"high_24h\",\n      headerName: \"High 24 hour price\"\n    }, {\n      field: \"low_24h\",\n      headerName: \"Low 24 hour price\"\n    }];\n    url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false`;\n  } else {\n    marketDataCols = [{\n      field: \"name\",\n      headerName: \"Name\"\n    }, {\n      field: \"symbol\",\n      headerName: \"Symbol\"\n    }, {\n      field: \"hashing_algorithm\",\n      headerName: \"Hashing Algorithm\"\n    }, {\n      field: \"description\",\n      headerName: \"Description\"\n    }, {\n      field: \"low_24h\",\n      headerName: \"Market Cap in Euro\"\n    }, {\n      field: \"homepage\",\n      headerName: \"Homepage\"\n    }, {\n      field: \"market_cap.eur\",\n      headerName: \"Genesis Date\"\n    }];\n    url = `https://api.coingecko.com/api/v3/coins/${search}`;\n  }\n\n  const getMarketData = async () => {\n    alert(url);\n    const response = await fetch(url);\n    const Data = await response.json();\n    setmarketTableData(Data);\n  };\n\n  useEffect(() => {\n    getMarketData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to CoinGecko Data Market APIs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Following API Results are ordered by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Market Cap Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 50\n        }, this), \" and using Euro as default \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"VS_Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 116\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter the Coin ID below to get the results by Coin ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Eg: Bitcoin, Ethereum\",\n      onChange: event => {\n        setSearchData(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 700,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: marketTableData,\n        columns: marketDataCols,\n        pageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n};\n\n_s(GetGeckoApi, \"37CAmztMqFpNLNFtEL/ArjGLlj8=\");\n\n_c = GetGeckoApi;\nexport default GetGeckoApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetGeckoApi\");","map":{"version":3,"sources":["E:/React/cmom_test/src/component/GetGeckoApi.js"],"names":["React","useState","useEffect","DataGrid","GetGeckoApi","marketTableData","setmarketTableData","search","setSearchData","marketDataCols","url","field","headerName","getMarketData","alert","response","fetch","Data","json","event","target","value","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport './css/GetGeckoApi.css';\r\n\r\nconst GetGeckoApi = () => {\r\n\r\nconst [marketTableData, setmarketTableData] = useState([]);\r\nconst[search, setSearchData] = useState(null);\r\nlet marketDataCols = [];\r\nlet url = \"\";\r\n//let errorMessage = \"\";\r\n\r\nif(!search){\r\n  marketDataCols = [\r\n    {field: \"image\", headerName: \"Image\"},\r\n    {field: \"name\", headerName: \"Name\"},\r\n    {field: \"symbol\", headerName: \"Symbol\"},\r\n    {field: \"current_price\", headerName: \"Current Price\"},\r\n    {field: \"high_24h\", headerName: \"High 24 hour price\"},\r\n    {field: \"low_24h\", headerName: \"Low 24 hour price\"}\r\n  ];\r\n  url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false`;\r\n\r\n} else {\r\n  marketDataCols = [\r\n    {field: \"name\", headerName: \"Name\"},\r\n    {field: \"symbol\", headerName: \"Symbol\"},\r\n    {field: \"hashing_algorithm\", headerName: \"Hashing Algorithm\"},\r\n    {field: \"description\", headerName: \"Description\"},\r\n    {field: \"low_24h\", headerName: \"Market Cap in Euro\"},\r\n    {field: \"homepage\", headerName: \"Homepage\"},\r\n    {field: \"market_cap.eur\", headerName: \"Genesis Date\"}\r\n  ];\r\n  url = `https://api.coingecko.com/api/v3/coins/${search}`;\r\n}\r\n\r\nconst getMarketData = async () => {\r\n    alert(url);\r\n    const response = await fetch(url);\r\n    const Data = await response.json();\r\n    setmarketTableData(Data);\r\n}\r\n\r\nuseEffect(() => {\r\ngetMarketData();\r\n},[]);\r\n\r\nreturn (\r\n<div className=\"container\">\r\n    <div className=\"header-div\">\r\n        <h2>Welcome to CoinGecko Data Market APIs</h2>\r\n        <p> Following API Results are ordered by <strong>Market Cap Description</strong> and using Euro as default <strong>VS_Currency</strong> </p>\r\n        <p>Please Enter the Coin ID below to get the results by Coin ID</p>\r\n    </div>\r\n    <input type=\"search\" placeholder=\"Eg: Bitcoin, Ethereum\" onChange={(event)=>{setSearchData(event.target.value)}}></input>\r\n    <div style={{ height: 700, width: '100%' }}>\r\n        <DataGrid\r\n        rows={marketTableData} columns={marketDataCols} pageSize={10} />\r\n    </div>\r\n</div>  \r\n\r\n  )\r\n}\r\n\r\nexport default GetGeckoApi;"]},"metadata":{},"sourceType":"module"}