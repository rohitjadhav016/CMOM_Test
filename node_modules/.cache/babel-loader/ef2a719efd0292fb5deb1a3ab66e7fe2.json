{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\cmom_test\\\\src\\\\component\\\\DataGridTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false\";\nconst marketDataCols = [{\n  field: \"image\",\n  headerName: \"Image\"\n}, {\n  field: \"name\",\n  headerName: \"Name\"\n}, {\n  field: \"symbol\",\n  headerName: \"Symbol\"\n}, {\n  field: \"current_price\",\n  headerName: \"Current Price\"\n}, {\n  field: \"high_24h\",\n  headerName: \"High 24 hour price\"\n}, {\n  field: \"low_24h\",\n  headerName: \"Low 24 hour price\"\n}];\n\nconst DataGridTable = () => {\n  _s();\n\n  const [marketTableData, setmarketTableData] = useState([]);\n\n  const getMarketData = async () => {\n    const response = await fetch(url);\n    const Data = await response.json();\n    setmarketTableData(Data);\n  };\n\n  useEffect(() => {\n    getMarketData();\n  }, []);\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      '& div[data-rowIndex][role=\"row\"]:nth-of-type(5n-4)': {\n        color: \"blue\",\n        fontSize: 18,\n        //risky sizing code starts here\n        minHeight: \"60px !important\",\n        height: 60,\n        \"& div\": {\n          minHeight: \"60px !important\",\n          height: 60,\n          lineHeight: \"59px !important\"\n        }\n      }\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: marketTableData,\n      columns: marketDataCols,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataGridTable, \"JXSUw/DCVm57NozTU6q67qgN5CU=\");\n\n_c = DataGridTable;\nexport default DataGridTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGridTable\");","map":{"version":3,"sources":["E:/React/cmom_test/src/component/DataGridTable.js"],"names":["React","useState","useEffect","DataGrid","makeStyles","url","marketDataCols","field","headerName","DataGridTable","marketTableData","setmarketTableData","getMarketData","response","fetch","Data","json","useStyles","theme","createStyles","root","color","fontSize","minHeight","height","lineHeight","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AACA,MAAMC,GAAG,GAAG,yHAAZ;AAEA,MAAMC,cAAc,GAAG,CACnB;AAACC,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CADmB,EAEnB;AAACD,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CAFmB,EAGnB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,UAAU,EAAE;AAA9B,CAHmB,EAInB;AAACD,EAAAA,KAAK,EAAE,eAAR;AAAyBC,EAAAA,UAAU,EAAE;AAArC,CAJmB,EAKnB;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,UAAU,EAAE;AAAhC,CALmB,EAMnB;AAACD,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,UAAU,EAAE;AAA/B,CANmB,CAAvB;;AASA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMW,aAAa,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,IAAAA,kBAAkB,CAACI,IAAD,CAAlB;AACP,GAJG;;AAMJb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAKA,QAAMK,SAAS,GAAGb,UAAU,CAAEc,KAAD,IAC3BC,YAAY,CAAC;AACXC,IAAAA,IAAI,EAAE;AACJ,4DAAsD;AACpDC,QAAAA,KAAK,EAAE,MAD6C;AAEpDC,QAAAA,QAAQ,EAAE,EAF0C;AAGpD;AACAC,QAAAA,SAAS,EAAE,iBAJyC;AAKpDC,QAAAA,MAAM,EAAE,EAL4C;AAMpD,iBAAS;AACPD,UAAAA,SAAS,EAAE,iBADJ;AAEPC,UAAAA,MAAM,EAAE,EAFD;AAGPC,UAAAA,UAAU,EAAE;AAHL;AAN2C;AADlD;AADK,GAAD,CADc,CAA5B;AAmBE,sBACE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeE,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACI,QAAC,QAAD;AACA,MAAA,IAAI,EAAEhB,eADN;AACuB,MAAA,OAAO,EAAEJ,cADhC;AACgD,MAAA,QAAQ,EAAE;AAD1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCD;;GAAMG,a;;KAAAA,a;AA2CN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst url = \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false\";\r\n\r\nconst marketDataCols = [\r\n    {field: \"image\", headerName: \"Image\"},\r\n    {field: \"name\", headerName: \"Name\"},\r\n    {field: \"symbol\", headerName: \"Symbol\"},\r\n    {field: \"current_price\", headerName: \"Current Price\"},\r\n    {field: \"high_24h\", headerName: \"High 24 hour price\"},\r\n    {field: \"low_24h\", headerName: \"Low 24 hour price\"}\r\n];\r\n\r\nconst DataGridTable = () => {\r\n\r\n    const [marketTableData, setmarketTableData] = useState([]);\r\n\r\n    const getMarketData = async () => {\r\n        const response = await fetch(url);\r\n        const Data = await response.json();\r\n        setmarketTableData(Data);\r\n}\r\n\r\nuseEffect(() => {\r\n    getMarketData();\r\n},[]);\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& div[data-rowIndex][role=\"row\"]:nth-of-type(5n-4)': {\r\n        color: \"blue\",\r\n        fontSize: 18,\r\n        //risky sizing code starts here\r\n        minHeight: \"60px !important\",\r\n        height: 60,\r\n        \"& div\": {\r\n          minHeight: \"60px !important\",\r\n          height: 60,\r\n          lineHeight: \"59px !important\"\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\n  return (\r\n    <div style={{ height: 700, width: '100%' }}>\r\n        <DataGrid\r\n        rows={marketTableData} columns={marketDataCols} pageSize={10} />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DataGridTable;"]},"metadata":{},"sourceType":"module"}