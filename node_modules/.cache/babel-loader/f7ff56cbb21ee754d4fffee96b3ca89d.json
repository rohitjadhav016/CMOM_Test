{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\cmom_test\\\\src\\\\component\\\\GetGeckoApi.js\",\n    _s = $RefreshSig$();\n\n//importing the required libraries and components\nimport React, { useState, useEffect } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport './css/GetGeckoApi.css'; //styling the output table\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#8bacd6',\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#c4d7ef'\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: '#adc3dd'\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  };\n});\n\nconst GetGeckoApi = () => {\n  _s();\n\n  //defining the required const and variables\n  const [marketTableData, setmarketTableData] = useState([]);\n  const [search, setSearchData] = useState(null);\n  let marketDataCols = [];\n  let url = \"\";\n  let errorMessage = \"\";\n  marketDataCols = [{\n    field: \"image\",\n    headerName: \"Image\"\n  }, {\n    field: \"name\",\n    headerName: \"Name\"\n  }, {\n    field: \"symbol\",\n    headerName: \"Symbol\"\n  }, {\n    field: \"current_price\",\n    headerName: \"Current Price\"\n  }, {\n    field: \"high_24h\",\n    headerName: \"High 24 hour price\"\n  }, {\n    field: \"low_24h\",\n    headerName: \"Low 24 hour price\"\n  }];\n  url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false`; //setting the url based on input by user\n\n  if (search) {\n    marketDataCols = [{\n      field: \"name\",\n      headerName: \"Name\"\n    }, {\n      field: \"symbol\",\n      headerName: \"Symbol\"\n    }, {\n      field: \"hashing_algorithm\",\n      headerName: \"Hashing Algorithm\"\n    }, {\n      field: \"description\",\n      headerName: \"Description\"\n    }, {\n      field: \"coingecko_score\",\n      headerName: \"Market Cap in Euro\"\n    }, {\n      field: \"homepage\",\n      headerName: \"Homepage\"\n    }];\n    let keyword = search.toLowerCase();\n    url = `https://api.coingecko.com/api/v3/coins/${keyword}`;\n  } //get data from the api\n\n\n  const getMarketData = async () => {\n    alert(url);\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (!data) {\n      errorMessage = 'No Data Found';\n    }\n\n    console.log(data);\n    setmarketTableData(data);\n  };\n\n  function soemDate(data) {\n    return Object.values(data).map(curElem => console.log('homepage'));\n  } // function displayData(data, search){\n  //   return(\n  //     data.map((curElem) => (\n  //       <StyledTableRow>\n  //         {!curElem.image && search ? (\n  //         <>\n  //           <StyledTableCell align=\"center\">{curElem.name}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.symbol}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.hashing_algorithm}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.coingecko_score}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\n  //         </>\n  //         ):(\n  //         <>\n  //           <StyledTableCell align=\"center\"><img src={curElem.image} alt=\"Icon\" height={25} width={25}/></StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.name}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.symbol}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.current_price}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.high_24h}</StyledTableCell>\n  //           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\n  //         </>\n  //         )}\n  //       </StyledTableRow>\n  //       ))\n  //   )              \n  // }\n\n\n  useEffect(() => {\n    getMarketData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to CoinGecko CryptoCurrency Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Following API Results are ordered by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Market Cap Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 50\n        }, this), \" and using Euro as default \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"VS_Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 116\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter the Coin ID below to get the results by Coin ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Eg: bitcoin, ethereum\",\n      onChange: event => {\n        setSearchData(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 700\n        },\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: !marketTableData && !search ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: [\" \", errorMessage, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 43\n            }, this) : marketDataCols.map(curElem => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: curElem.headerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: soemDate(marketTableData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 1\n  }, this);\n};\n\n_s(GetGeckoApi, \"37CAmztMqFpNLNFtEL/ArjGLlj8=\");\n\n_c2 = GetGeckoApi;\nexport default GetGeckoApi;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"GetGeckoApi\");","map":{"version":3,"sources":["E:/React/cmom_test/src/component/GetGeckoApi.js"],"names":["React","useState","useEffect","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","border","GetGeckoApi","marketTableData","setmarketTableData","search","setSearchData","marketDataCols","url","errorMessage","field","headerName","keyword","toLowerCase","getMarketData","alert","response","fetch","data","json","console","log","soemDate","Object","values","map","curElem","event","target","value","minWidth"],"mappings":"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","sourcesContent":["//importing the required libraries and components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport './css/GetGeckoApi.css';\r\n\r\n//styling the output table\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: '#8bacd6',\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: '#c4d7ef',\r\n  },\r\n  '&:nth-of-type(even)': {\r\n    backgroundColor: '#adc3dd',\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst GetGeckoApi = () => {\r\n//defining the required const and variables\r\nconst [marketTableData, setmarketTableData] = useState([]);\r\nconst[search, setSearchData] = useState(null);\r\nlet marketDataCols = [];\r\nlet url = \"\";\r\nlet errorMessage = \"\";\r\nmarketDataCols = [\r\n  {field: \"image\", headerName: \"Image\"},\r\n  {field: \"name\", headerName: \"Name\"},\r\n  {field: \"symbol\", headerName: \"Symbol\"},\r\n  {field: \"current_price\", headerName: \"Current Price\"},\r\n  {field: \"high_24h\", headerName: \"High 24 hour price\"},\r\n  {field: \"low_24h\", headerName: \"Low 24 hour price\"}\r\n];\r\nurl = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false`;\r\n\r\n//setting the url based on input by user\r\nif(search){\r\n  marketDataCols = [\r\n    {field: \"name\", headerName: \"Name\"},\r\n    {field: \"symbol\", headerName: \"Symbol\"},\r\n    {field: \"hashing_algorithm\", headerName: \"Hashing Algorithm\"},\r\n    {field: \"description\", headerName: \"Description\"},\r\n    {field: \"coingecko_score\", headerName: \"Market Cap in Euro\"},\r\n    {field: \"homepage\", headerName: \"Homepage\"},\r\n  ];\r\n  let keyword = search.toLowerCase();\r\n  url = `https://api.coingecko.com/api/v3/coins/${keyword}`;\r\n}\r\n\r\n//get data from the api\r\nconst getMarketData = async () => {\r\n  alert(url);\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  if(!data){\r\n    errorMessage = 'No Data Found';\r\n  }\r\n  console.log(data);\r\n  setmarketTableData(data);\r\n  }\r\n\r\nfunction soemDate(data) {\r\n  return Object.values(data).map((curElem) => (console.log('homepage')));\r\n}\r\n\r\n// function displayData(data, search){\r\n//   return(\r\n//     data.map((curElem) => (\r\n//       <StyledTableRow>\r\n//         {!curElem.image && search ? (\r\n//         <>\r\n//           <StyledTableCell align=\"center\">{curElem.name}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.symbol}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.hashing_algorithm}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.coingecko_score}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\r\n//         </>\r\n//         ):(\r\n//         <>\r\n//           <StyledTableCell align=\"center\"><img src={curElem.image} alt=\"Icon\" height={25} width={25}/></StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.name}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.symbol}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.current_price}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.high_24h}</StyledTableCell>\r\n//           <StyledTableCell align=\"center\">{curElem.low_24h}</StyledTableCell>\r\n//         </>\r\n//         )}\r\n//       </StyledTableRow>\r\n//       ))\r\n//   )              \r\n// }\r\n\r\n\r\nuseEffect(() => {\r\ngetMarketData();\r\n// eslint-disable-next-line react-hooks/exhaustive-deps\r\n},[]);\r\n\r\nreturn (\r\n<div className=\"container\">\r\n    <div className=\"header-div\">\r\n        <h2>Welcome to CoinGecko CryptoCurrency Tracker</h2>\r\n        <p> Following API Results are ordered by <strong>Market Cap Description</strong> and using Euro as default <strong>VS_Currency</strong> </p>\r\n        <p>Please Enter the Coin ID below to get the results by Coin ID</p>\r\n    </div>\r\n    <input type=\"search\" placeholder=\"Eg: bitcoin, ethereum\" onChange={(event)=>{setSearchData(event.target.value)}}></input>\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          {!marketTableData && !search ? (<p style={{color:'red'}}> {errorMessage} </p>) : (marketDataCols.map((curElem) => (\r\n            <StyledTableCell align=\"center\">{curElem.headerName}</StyledTableCell>\r\n          )))}\r\n          </TableRow>\r\n        </TableHead>\r\n      <TableBody>\r\n        {soemDate(marketTableData)}\r\n        </TableBody> \r\n      </Table>\r\n    </TableContainer>\r\n</div>  \r\n\r\n  )\r\n}\r\nexport default GetGeckoApi;"]},"metadata":{},"sourceType":"module"}