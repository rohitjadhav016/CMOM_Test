{"version":3,"file":"mui-table.esm.js","sources":["../src/utils.tsx","../src/index.tsx"],"sourcesContent":["import * as deepmerge from 'deepmerge';\nimport { ColumnDef } from './index';\n\ntype ColumnDefHeader = ColumnDef & {\n  colSpan?: number;\n  rowSpan?: number;\n};\n\nexport function getHeaders(columns: ColumnDef[]) {\n  const maxDepth = getDepth(columns);\n  const result: ColumnDefHeader[][] = Array.from({\n    length: maxDepth,\n  }).map(() => []);\n\n  function addItems(columns: ColumnDef[], depth: number) {\n    columns.forEach(column => {\n      const columnDef: ColumnDefHeader = {\n        ...column,\n      };\n      delete columnDef.columns;\n\n      if (column.columns) {\n        const colSpan = getWidth(column);\n        if (colSpan > 1) {\n          columnDef.colSpan = colSpan;\n        }\n        addItems(column.columns, depth + 1);\n      } else {\n        const rowSpan = maxDepth - depth;\n        if (rowSpan > 1) {\n          columnDef.rowSpan = maxDepth - depth;\n        }\n      }\n      result[depth].push(columnDef);\n    });\n  }\n  addItems(columns, 0);\n\n  return result;\n}\n\nexport function getColumns(columns: ColumnDef[]) {\n  const result: ColumnDef[] = [];\n\n  function setColumns(column: ColumnDef) {\n    if (column.columns == null) {\n      result.push(column);\n      return;\n    }\n\n    column.columns.forEach(child => setColumns(child));\n  }\n  columns.forEach(column => setColumns(column));\n\n  return result;\n}\n\nexport function getDepth(columns: ColumnDef[] | undefined) {\n  if (columns == null) {\n    return 0;\n  }\n\n  let depth = 0;\n  columns.forEach(item => {\n    depth = Math.max(depth, getDepth(item.columns));\n  });\n\n  return depth + 1;\n}\n\nexport function getWidth(column: ColumnDef) {\n  if (column.columns == null) {\n    return 1;\n  }\n\n  let width = 0;\n  column.columns.forEach(child => {\n    width += getWidth(child);\n  });\n\n  return width;\n}\n\nexport function isNil(obj: any) {\n  return obj == null;\n}\n\nexport function merge(...objects: any[]) {\n  const [firstObj] = objects;\n  const destination = isNil(firstObj) ? {} : firstObj;\n  const existingObjects = objects.filter(source => !isNil(source));\n  const sources = [destination].concat(existingObjects);\n\n  return deepmerge.all(sources);\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table, { TableProps } from '@material-ui/core/Table';\nimport TableBody, { TableBodyProps } from '@material-ui/core/TableBody';\nimport TableCell, { TableCellProps } from '@material-ui/core/TableCell';\nimport TableHead, { TableHeadProps } from '@material-ui/core/TableHead';\nimport TablePagination, {\n  TablePaginationProps,\n} from '@material-ui/core/TablePagination';\nimport TableRow, { TableRowProps } from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { getHeaders, getColumns, merge } from './utils';\n\ntype ResolvePropType<T, TData> =\n  | T\n  | ((obj: { rowData: TData; column: ColumnDef<TData> }) => T | void);\n\nfunction resolveProp<T, TData>(\n  prop: ResolvePropType<T, TData> | undefined,\n  args: any\n) {\n  return prop instanceof Function ? prop(args) : prop;\n}\n\nexport const useStyles = makeStyles(theme => ({\n  container: {},\n  tableWrapper: {},\n  cellSelected: {\n    backgroundColor: theme.palette.grey[100],\n  },\n  cellHovered: {\n    backgroundColor: theme.palette.grey[200],\n  },\n}));\n\nexport type ColumnDef<TData = any> = {\n  name: string;\n  header?: string | React.ReactNode;\n  cell?: (data: TData, index: number) => React.ReactNode;\n  cellProps?: ResolvePropType<TableCellProps, TData>;\n  onClick?: TableCellProps['onClick'];\n  onHeaderClick?: boolean | ((obj: { column: ColumnDef<TData> }) => void);\n  headerCellProps?: TableCellProps;\n  bodyCellProps?: TableCellProps;\n  orderBy?: string | boolean | ((a: any, b: any) => number);\n  columns?: ColumnDef<TData>[];\n};\n\nexport type MuiTableProps<TData = any> = {\n  data: TData[] | null;\n  columns: ColumnDef<TData>[];\n  bodyProps?: TableBodyProps;\n  containerProps?: any;\n  includeHeaders?: boolean;\n  headerProps?: TableHeadProps;\n  rowProps?: ResolvePropType<TableRowProps, TData>;\n  headerRowProps?: ResolvePropType<TableRowProps, TData>;\n  headerCellProps?: ResolvePropType<TableCellProps, TData>;\n  bodyRowProps?: ResolvePropType<TableRowProps, TData>;\n  bodyCellProps?: ResolvePropType<TableCellProps, TData>;\n  cellProps?: ResolvePropType<TableCellProps, TData>;\n  onHeaderClick?: (obj: { column: ColumnDef<TData> }) => void;\n  onCellClick?: (obj: { rowData: TData; column: ColumnDef<TData> }) => void;\n  orderBy?: string;\n  orderDirection?: 'asc' | 'desc';\n  pagination?: TablePaginationProps;\n  addPlaceholderRows?: boolean;\n  tableWrapperProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  isCellHovered?: (obj: {\n    column: ColumnDef<TData>;\n    rowData: TData | null;\n    hoveredColumn: ColumnDef<TData> | null;\n    hoveredRowData: TData | null;\n  }) => boolean;\n  isCellSelected?: (obj: {\n    column: ColumnDef<TData>;\n    rowData: TData | null;\n  }) => boolean;\n  classes?: {\n    container?: string;\n    tableWrapper?: string;\n    cellHovered?: string;\n    cellSelected?: string;\n  };\n} & TableProps;\n\nfunction MuiTable<T = any>(props: MuiTableProps<T>) {\n  const {\n    data,\n    columns,\n\n    containerProps,\n    tableWrapperProps,\n    headerProps,\n    bodyProps,\n\n    rowProps,\n    headerRowProps,\n    bodyRowProps,\n\n    cellProps: defaultCellProps,\n    headerCellProps: defaultHeaderCellProps,\n    bodyCellProps: defaultBodyCellProps,\n\n    includeHeaders,\n    onHeaderClick,\n    onCellClick,\n    isCellHovered,\n    isCellSelected,\n    pagination,\n    addPlaceholderRows,\n    orderBy,\n    orderDirection,\n\n    ...tableProps\n  } = props;\n\n  const [state, setState] = useState<{\n    hoveredColumn: ColumnDef | null;\n    hoveredRowData: T | null;\n  }>({\n    hoveredColumn: null,\n    hoveredRowData: null,\n  });\n  const classes = useStyles();\n\n  const { hoveredColumn, hoveredRowData } = state;\n\n  return (\n    <div className={classes.container} {...containerProps}>\n      <div className={classes.tableWrapper} {...tableWrapperProps}>\n        <Table {...tableProps}>\n          {includeHeaders && (\n            <TableHead {...headerProps}>\n              {getHeaders(columns).map((headerRow, headerRowIndex) => (\n                <TableRow\n                  {...resolveProp(rowProps, {\n                    column: null,\n                    rowData: null,\n                    hoveredColumn,\n                    hoveredRowData,\n                  })}\n                  {...resolveProp(headerRowProps, {\n                    column: null,\n                    rowData: null,\n                    hoveredColumn,\n                    hoveredRowData,\n                  })}\n                  key={`header-row-${headerRowIndex}`}\n                >\n                  {headerRow &&\n                    headerRow.map((column, _columnIndex) => {\n                      const contents = column.header || column.name;\n\n                      const isHovered =\n                        hoveredColumn &&\n                        hoveredRowData &&\n                        isCellHovered &&\n                        isCellHovered({\n                          column,\n                          rowData: null,\n                          hoveredColumn,\n                          hoveredRowData,\n                        });\n\n                      const isSelected =\n                        isCellSelected &&\n                        isCellSelected({ column, rowData: null });\n\n                      const className = clsx({\n                        [classes.cellHovered]: isHovered,\n                        [classes.cellSelected]: isSelected,\n                      });\n\n                      const cellProps = merge(\n                        {},\n                        { className },\n                        resolveProp(defaultCellProps, {\n                          column,\n                          rowData: null,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(column.cellProps, {\n                          column,\n                          rowData: null,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(defaultHeaderCellProps, {\n                          column,\n                          rowData: null,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(column.headerCellProps, {\n                          column,\n                          rowData: null,\n                          hoveredColumn,\n                          hoveredRowData,\n                        })\n                      );\n\n                      return (\n                        <TableCell\n                          {...(isCellHovered && {\n                            onMouseEnter: () => {\n                              setState({\n                                hoveredColumn: column,\n                                hoveredRowData: null,\n                              });\n                            },\n                            onMouseLeave: () =>\n                              setState({\n                                hoveredColumn: null,\n                                hoveredRowData: null,\n                              }),\n                          })}\n                          key={`header-cell-${column.name}`}\n                          colSpan={column.colSpan}\n                          rowSpan={column.rowSpan}\n                          {...cellProps}\n                        >\n                          {column.orderBy !== false &&\n                          column.onHeaderClick !== false &&\n                          (column.onHeaderClick || onHeaderClick) ? (\n                            <TableSortLabel\n                              active={\n                                orderBy === column.name ||\n                                orderBy === column.orderBy\n                              }\n                              style={{ width: 'inherit' }} // fix text overflowing\n                              direction={orderDirection}\n                              onClick={() =>\n                                typeof column.onHeaderClick === 'function'\n                                  ? column.onHeaderClick({ column })\n                                  : onHeaderClick?.({ column })\n                              }\n                            >\n                              {contents}\n                            </TableSortLabel>\n                          ) : (\n                            contents\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                </TableRow>\n              ))}\n            </TableHead>\n          )}\n\n          <TableBody {...bodyProps}>\n            {data &&\n              data.map((rowData, rowIndex) => {\n                return (\n                  <TableRow\n                    key={`body-row-${rowIndex}`}\n                    {...resolveProp(rowProps, {\n                      column: null,\n                      rowData,\n                      hoveredColumn,\n                      hoveredRowData,\n                    })}\n                    {...resolveProp(bodyRowProps, {\n                      column: null,\n                      rowData,\n                      hoveredColumn,\n                      hoveredRowData,\n                    })}\n                  >\n                    {getColumns(columns).map((column, _columnIndex) => {\n                      const contents = column.cell\n                        ? column.cell(rowData, rowIndex)\n                        : // @ts-ignore: add index signature\n                          rowData[column.name];\n\n                      const isHovered =\n                        hoveredColumn &&\n                        hoveredRowData &&\n                        isCellHovered &&\n                        isCellHovered({\n                          column,\n                          rowData,\n                          hoveredColumn,\n                          hoveredRowData,\n                        });\n\n                      const isSelected =\n                        isCellSelected && isCellSelected({ column, rowData });\n\n                      const className = clsx({\n                        [classes.cellHovered]: isHovered,\n                        [classes.cellSelected]: isSelected,\n                      });\n\n                      const cellProps = merge(\n                        {},\n                        { className },\n                        resolveProp(defaultCellProps, {\n                          column,\n                          rowData,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(column.cellProps, {\n                          column,\n                          rowData,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(defaultBodyCellProps, {\n                          column,\n                          rowData,\n                          hoveredColumn,\n                          hoveredRowData,\n                        }),\n                        resolveProp(column.bodyCellProps, {\n                          column,\n                          rowData,\n                          hoveredColumn,\n                          hoveredRowData,\n                        })\n                      );\n\n                      return (\n                        <TableCell\n                          style={{\n                            ...((onCellClick || column.onClick) && {\n                              cursor: 'pointer',\n                            }),\n                          }}\n                          {...(isCellHovered && {\n                            onMouseEnter: () => {\n                              setState({\n                                hoveredColumn: column,\n                                hoveredRowData: rowData,\n                              });\n                            },\n                            onMouseLeave: () =>\n                              setState({\n                                hoveredColumn: null,\n                                hoveredRowData: null,\n                              }),\n                          })}\n                          {...(onCellClick && {\n                            onClick: () => {\n                              if (window.getSelection()?.toString() === '') {\n                                onCellClick({ column, rowData }); // Can be overridden by cellProps.onClick on column definition\n                              }\n                            },\n                          })}\n                          key={`body-cell-${rowIndex}-${column.name}`}\n                          {...cellProps}\n                        >\n                          {contents}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n\n            {/* Fill remaining space to keep pagination controls in consistent location */}\n            {pagination &&\n              addPlaceholderRows &&\n              pagination.rowsPerPage > (data ? data.length : 0) &&\n              Array.from({\n                length: pagination.rowsPerPage - (data ? data.length : 0),\n              }).map((rowData, rowIndex) => (\n                <TableRow\n                  {...resolveProp(rowProps, {\n                    column: null,\n                    rowData,\n                    hoveredColumn,\n                    hoveredRowData,\n                  })}\n                  {...resolveProp(bodyRowProps, {\n                    column: null,\n                    rowData,\n                    hoveredColumn,\n                    hoveredRowData,\n                  })}\n                  key={`body-row-placeholder-${rowIndex}`}\n                >\n                  {columns.map(column => {\n                    const cellProps: any = merge(\n                      {},\n                      resolveProp(defaultCellProps, {\n                        column,\n                        rowData,\n                        hoveredColumn,\n                        hoveredRowData,\n                      }),\n                      resolveProp(column.cellProps, {\n                        column,\n                        rowData,\n                        hoveredColumn,\n                        hoveredRowData,\n                      }),\n                      resolveProp(defaultBodyCellProps, {\n                        column,\n                        rowData,\n                        hoveredColumn,\n                        hoveredRowData,\n                      }),\n                      resolveProp(column.bodyCellProps, {\n                        column,\n                        rowData,\n                        hoveredColumn,\n                        hoveredRowData,\n                      })\n                    );\n\n                    cellProps.style = {\n                      ...cellProps.style,\n                      visibility: 'hidden',\n                    };\n\n                    return (\n                      <TableCell\n                        style={{ visibility: 'hidden' }}\n                        key={`body-cell-placeholder-${rowIndex}-${column.name}`}\n                        {...cellProps}\n                      >\n                        &nbsp;\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </div>\n      {pagination && (\n        // @ts-ignore - `component` explicitly omitted from props but allowed (https://github.com/mui-org/material-ui/commit/8dc12394addced6c1ae34e0a05a3a799efe4ca6c#diff-33ba99dbf7e0ca4f0d9c07e27849f8d3R47)\n        <TablePagination component=\"div\" {...pagination} />\n      )}\n    </div>\n  );\n}\n\nexport { getHeaders, getColumns };\n\n// export default MuiTable;\n// Workaround: Generic Props lost with React memo - https://github.com/DefinitelyTyped/DefinitelyTyped/issues/37087#issuecomment-542793243\n// export default React.memo(MuiTable);\nconst typedMemo: <T>(c: T) => T = React.memo;\nexport default typedMemo(MuiTable);\n"],"names":["getHeaders","columns","maxDepth","getDepth","result","Array","from","length","map","addItems","depth","forEach","column","columnDef","colSpan","getWidth","rowSpan","push","getColumns","setColumns","child","item","Math","max","width","isNil","obj","merge","objects","firstObj","destination","existingObjects","filter","source","sources","concat","deepmerge","resolveProp","prop","args","Function","useStyles","makeStyles","theme","container","tableWrapper","cellSelected","backgroundColor","palette","grey","cellHovered","MuiTable","props","data","containerProps","tableWrapperProps","headerProps","bodyProps","rowProps","headerRowProps","bodyRowProps","defaultCellProps","cellProps","defaultHeaderCellProps","headerCellProps","defaultBodyCellProps","bodyCellProps","includeHeaders","onHeaderClick","onCellClick","isCellHovered","isCellSelected","pagination","addPlaceholderRows","orderBy","orderDirection","tableProps","useState","hoveredColumn","hoveredRowData","state","setState","classes","React","className","Table","TableHead","headerRow","headerRowIndex","TableRow","rowData","key","_columnIndex","contents","header","name","isHovered","isSelected","clsx","TableCell","onMouseEnter","onMouseLeave","TableSortLabel","active","style","direction","onClick","TableBody","rowIndex","cell","cursor","window","getSelection","toString","rowsPerPage","visibility","TablePagination","component","typedMemo","memo"],"mappings":"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"}